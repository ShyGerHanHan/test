# .github/workflows/csv-automation.yml
name: CSV 下載與 API 傳送自動化

# 觸發條件
on:
  schedule:
    - cron: '0 2 * * *'  # 每天早上10點 (台灣時間，UTC+8)
    - cron: '0 14 * * *' # 每天晚上10點 (台灣時間)
  workflow_dispatch:  # 允許手動執行
    inputs:
      debug_mode:
        description: '啟用除錯模式'
        required: false
        default: 'false'
        type: boolean

# 環境變數
env:
  WEBSITE_USERNAME: ${{ secrets.WEBSITE_USERNAME }}
  WEBSITE_PASSWORD: ${{ secrets.WEBSITE_PASSWORD }}
  API_KEY: ${{ secrets.API_KEY }}

jobs:
  csv-automation:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 下載程式碼
      uses: actions/checkout@v4
      
    - name: 🐍 設定 Python 環境
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 📦 安裝套件
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔧 設定 Chrome 瀏覽器
      uses: browser-actions/setup-chrome@latest
      with:
        chrome-version: stable
        
    - name: 📊 執行 CSV 自動化程式
      run: |
        echo "開始執行自動化程式..."
        python main.py
        
    - name: 📄 上傳執行日誌 (如果失敗)
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: error-logs
        path: |
          *.log
          /tmp/downloads/
        retention-days: 7
        
    - name: 📧 發送通知 (可選)
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "✅ 自動化執行成功"
          # 可以在這裡添加成功通知邏輯
        else
          echo "❌ 自動化執行失敗"
          # 可以在這裡添加失敗通知邏輯
        fi

  # 可選：健康檢查工作
  health-check:
    runs-on: ubuntu-latest
    needs: csv-automation
    if: always()
    
    steps:
    - name: 📊 檢查執行狀態
      run: |
        echo "前一個工作狀態: ${{ needs.csv-automation.result }}"
        if [ "${{ needs.csv-automation.result }}" != "success" ]; then
          echo "⚠️ CSV 自動化執行異常，需要檢查"
          exit 1
        fi
